@model IEnumerable<ExamSystem.Models.Books>
@{
    ViewData["Title"] = "All Books by " + @userManager.GetUserName(User);
    Layout = "_DashboardLayout";
}


@if (Model != null)
{
    <div class="row">
        @if (User.Identity.IsAuthenticated)
        {
            <a asp-controller="Books" asp-action="Create" class="btn btn-primary float-right"> <i class="fas fa-plus-circle"></i> Add New Book</a>
        }

    </div>
    <br />

    <div class="container">
        <div class="text-center">
            <button class="btn btn-dark filter-button" data-filter="all">All</button>
            @foreach (var obj in Enum.GetNames(typeof(BookCategory)))
            {
                <button class="btn btn-outline-primary filter-button" data-filter="@Enum.Parse(typeof(BookCategory), obj)"> @obj </button> <!--obj.Code.Replace(' ','_')-->
            }
        </div>
        <br>
        <div class="row">
            @foreach (var item in Model)
            {
                // partial view of all SED files based on Code
                <partial name="_IndividualBookView" model="item" />
            }
        </div>
    </div>

}
else
{
    <h4 class="mt-4 mb-5"><strong>No Book found</strong></h4>
}


@section Scripts{
    <script>
        $(document).ready(function() {
            $(".filter-button").click(function() {
                var value = $(this).attr('data-filter');
                if (value == "all") {
                    $('.filter').show('1000');
                }
                else {
                    $('.filter').not('.' + value).hide('3000');
                    $('.filter').filter('.' + value).show('3000');
                }
            });
        });
    </script>
}