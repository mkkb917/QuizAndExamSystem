@model ExamSystem.Models.Uploads

@inject UserManager<ApplicationUser> UserManager


@{
    // copy the action name for approove function call
    string currentAction = ViewBag.CurrentAction;

    string Path = "";
    string typeName = "";
    Enum.TryParse(Model.FileType.ToString(), out UploadsCategory category);
    //filter the each category to its relevant names
    if (Model.FileType == UploadsCategory.PastPapers) //pastpapers
    {
        Path = @WC.UploadPastPaper;
        Enum.TryParse(Model.Code.ToString(), out PastPapersEnum codeValue);
        typeName = codeValue.ToString();
    }
    else if (Model.FileType == UploadsCategory.Notes) //Notes
    {
        Path = @WC.UploadNotes;
        Enum.TryParse(Model.Code.ToString(), out NotesEnum codeValue);
        typeName = codeValue.ToString();
    }
    else if (Model.FileType == UploadsCategory.Syllabus) //syllabus
    {
        Path = @WC.UploadSyllabus;
        Enum.TryParse(Model.Code.ToString(), out SyllabusEnum codeValue);
        typeName = codeValue.ToString();
    }
    else if (Model.FileType == UploadsCategory.Decorate) //Decorate
    {
        Path = @WC.UploadDecorate;
        Enum.TryParse(Model.Code.ToString(), out DecorateEnum codeValue);
        typeName = codeValue.ToString();
    }
    else if (Model.FileType == UploadsCategory.Events) //School Events and Functions
    {
        Path = @WC.UploadEvents;
        Enum.TryParse(Model.Code.ToString(), out EventsEnum codeValue);
        typeName = codeValue.ToString();
    }
    else if (Model.FileType == UploadsCategory.Manage) //School Management
    {
        Path = @WC.UploadEvents;
        Enum.TryParse(Model.Code.ToString(), out ManageEnum codeValue);
        typeName = codeValue.ToString();
    }
}

@if (Model != null)
{
    <div class="col-lg-3 col-sm-5 col-12 filter @typeName">
        <div class="card" data-string="{{@Model.Code}}{{@Model.Title}}{{@Model.FileType}}{{@typeName.ToString()}}">
            <a asp-controller="Corner" asp-action="Details" asp-route-id="@Model.Id">
                <div class="bg-image hover-zoom ripple ripple-surface ripple-surface-light" data-mdb-ripple-color="light">
                    <img src="@Path@Model.FileThumbnail" alt="Card image" width="100%" height="200px">
                </div>
                <label class="text-light">
                    @typeName.ToString()
                </label>
                <div class="card-block">
                    <h4>@Model.Title</h4>
                    <span class="text-danger">Author: @Model.Author</span>
                    <p>@Model.Description</p>
                </div>
            </a>
            @if (User.Identity.IsAuthenticated)
            {
                <p>
                    <a asp-controller="Corner" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary float-left"><i class="fas fa-pencil"></i>Edit</a>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-controller="Corner" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger float-right"><i class="fas fa-recycle"></i>Delete</a>
                    }
                    @if (currentAction == "Approve")
                    {
                        <form asp-controller="Corner" asp-action="Approve" method="post">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-warning float-center"><i class="fas fa-check-circle"></i>Approve</button>
                        </form>
                    }
                </p>
            }
        </div>
    </div>

}
else
{
    <h4 class="mt-4 mb-5"><strong>No Data found</strong></h4>
}
