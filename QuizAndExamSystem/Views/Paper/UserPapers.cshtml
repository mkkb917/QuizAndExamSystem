@model IEnumerable<ExamSystem.Models.GeneratedPaper>
@{
    ViewData["Title"] = "All Generated Papers by " + @userManager.GetUserName(User);
    Layout = "_DashboardLayout";
}


@if (Model != null)
{
    <div class="row">
        <a asp-controller="Dashboard" asp-action="index" class="btn btn-secondary"> <i class="fas fa-arrow-left"></i> Back</a>
    </div>
    <div class="container">
        <h2 style="text-align:center; color:red;">Generate Paper</h2>
        <div class="row">
            <div class="col-12">
                @if (User.Identity.IsAuthenticated)
                {
                    <form action="GeneratePaper" method="post">
                        <div class="row">
                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                <label class="control-label">Choose Class</label>
                                <select id="GradeDDL" name="GradeDDL" class="form-control" asp-items="ViewBag.Grades"> <option selected disabled>---Select Grade---</option>  </select>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                <label class="control-label">Choose Subject</label>
                                <select id="SubjectDDL" name="SubjectDDL" onconchange="selectedText" class="form-control"> <option selected disabled>---Select Subject---</option> </select>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                <label class="control-label">Choose Paper (conduct) Date </label>
                                <input name="PaperDate" type="date" class="form-control" min="@System.DateTime.Today" max="@System.DateTime.Today.AddDays(90)" />
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                <label class="control-label">Premium Paper Generation </label>
                                <div class="form-check form-switch">
                                    <input type="checkbox" id="Advance" name="Advance" class="form-check-input" value="true" />
                                    <label class="form-check-label" for="Advance">Chapter Wise</label>
                                </div>
                            </div>
                            @*<div class="col-lg-3 col-md-6 col-sm-12 col-12">
                    <label class="control-label">Choose Topics (optional) </label>
                    <select id="TopicDDL" name="TopicDDL" onconchange="selectedText" class="form-control"> <option selected disabled>---Select Topics---</option> </select>
                    </div>*@
                            <div class="col-lg-10 col-md-9 col-sm-12 col-12">
                                <table id="tableUnits" class="table table-responsive bordered">

                                    <!-- Table is generated dynamically using AJAX function -->
                                </table>
                            </div>
                            <div class="col-lg-2 col-md-3 col-sm-12 col-12 d-grid gap-2 mx-auto">
                                <button type="submit" class="btn btn-success btn-lg float-right mt-4">Generate Paper</button>
                            </div>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-12">
            <div class="card">
                <!-- /.card-header -->
                <div class="card-body table-responsive">
                    <table id="tblData" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Grade)</th>
                                <th>@Html.DisplayNameFor(model => model.Subject)</th>
                                <th> @Html.DisplayNameFor(model => model.CreatedOn) </th>
                                <th> @Html.DisplayNameFor(model => model.PaperFile) </th>
                                <th> @Html.DisplayNameFor(model => model.PaperSubjetiveFile) </th>
                                <th> @Html.DisplayNameFor(model => model.SolutionFile) and Rubrics </th>
                                <th> @Html.DisplayNameFor(model => model.Barcode) </th>
                                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                {
                                    <th>Users</th>
                                    <th>Actions</th>
                                }
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model.Reverse())
                            {
                                <tr>
                                    <td> @Html.DisplayFor(modelItem => item.Grade) </td>
                                    <td> @Html.DisplayFor(modelItem => item.Subject) </td>
                                    <td> @Html.DisplayFor(modelItem => item.CreatedOn) </td>
                                    <td>
                                        <a class="btn btn-primary" asp-action="PaperView" asp-route-id="@item.Id" asp-route-type="objective" target="_blank">
                                            @*@Html.DisplayFor(modelItem => item.PaperFile) <i class="fas fa-download"></i>*@
                                            View
                                        </a>
                                    </td>
                                    <td>
                                        <a class="btn btn-primary" asp-action="PaperView" asp-route-id="@item.Id" asp-route-type="subjective" target="_blank">
                                            @*@Html.DisplayFor(modelItem => item.PaperSubjetiveFile) <i class="fas fa-download"></i>*@
                                            View
                                        </a>
                                    </td>
                                    <td>
                                        <a class="btn btn-primary" asp-action="PaperView" asp-route-id="@item.Id" asp-route-type="solution" target="_blank">
                                            @*@Html.DisplayFor(modelItem => item.SolutionFile)<i class="fas fa-download"></i>*@
                                            View
                                        </a>
                                    </td>
                                    <td>
                                        <img src="@WC.QrCodePath@item.Barcode" alt="QrCode" class="rounded-square" width="50" height="50">
                                    </td>
                                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                    {
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CreatedBy)
                                        </td>
                                        <td>
                                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id" onclick="ValidateDelete()"> <i class="fas fa-trash"></i></a>
                                        </td>
                                    }
                                </tr>
                            }

                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>



}
else
{
    <h4 class="mt-4 mb-5"><strong>No Record found</strong></h4>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Hide the table by default
            $('#tableUnits').hide();

            // Toggle table visibility based on checkbox state
            $('#Advance').change(function () {
                if ($(this).is(":checked")) {
                    $('#tableUnits').show();
                } else {
                    $('#tableUnits').hide();
                }
            });


            //// search bar
            //$(document).ready(function () {
            $('#tblData').DataTable();
            $('.dataTables_length').addClass('bs-select');

            //change the color of Status cell
            $('#status').each(function () {
                if ($(this).val() == 'Active') {
                    $(this).css({ 'color': '#13e305' })
                }
            });

            function ValidateDelete() {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        )
                        return true;
                    }
                    return false;
                });
            }

            //// generating paper

            //$(document).ready(function () {
            // grades comes from ViewBag.Grades
            // on change of gradeDDL                //code ok
            $('#GradeDDL').change(function () {
                var id = $(this).val();
                $('#SubjectDDL').empty();
                $('#SubjectDDL').append("<option>--Select Subject--</option>");
                $.ajax({
                    url: '/Paper/Subject?id=' + id,
                    success:
                        function (responce) {
                            $.each(responce, function (i, data) {
                                $('#SubjectDDL').append("<option value=" + data.id + ">" + data.subjectText + "</option>");
                            });
                        }
                });
            });

            // on change of SubjectDDL                      Code OK
            $('#SubjectDDL').change(function () {
                var id = $(this).val();
                //$('#tableUnits tbody').empty(); // Clear table body content
                //$('#TopicDDL').empty();
                //$('#TopicDDL').append("<option>--Select Topic--</option>");
                $('#tableH2').remove();
                $('#tableUnits tr').remove();
                $('#tableUnits').append('<h2 id="tableH2" class="h2"> Select Chapters details with Pairing Scheme</h2>')
                $('#tableUnits').append('<thead>' + '<tr><th>Select Units</th><th>Code</th><th>Topic Text</th><th>MCQs</th><th>SEQs</th><th>Long Qs </th><th>Blanks</th></tr>' + '</thead>');
                $.ajax({
                    type: "POST",
                    url: '/Paper/GetTopicsData?id=' + id,
                    data: '{ }',
                    success: function (response) {
                        var trHTML = '';
                        $.each(response, function (i, item) {
                            //$('#TopicDDL').append("<option value=" + item.id + ">" + item.topicText + "</option>");
                            //trHTML += '<tr><td>' + item.code + '</td><td>' + item.topicText + '</td><td><table><tr><td>MCQs</td><td>' + item.mcqCount + '</td><td><input type="number"></td></tr><tr><td>SEQs</td><td>' + item.seqCount + '</td></tr><tr><td>Long Questions</td><td>' + item.longQCount + '</td></tr><tr><td>Fill in the blanks</td><td>' + item.fillinBlankCount + '</td></tr></table></td>';
                            trHTML += '<tr> <td><input id="' + item.id + '" value="' + item.id + '" type="checkbox" name="topicList" class="form-check-input"/></td> <td>' + item.code + '</td><td>' + item.topicText + '</td><td>' + item.mcqCount + '</td><td>' + item.seqCount + '</td><td>' + item.longQCount + '</td><td>' + item.fillinBlankCount + '</td></tr>';
                        });
                        $('#tableUnits').append(trHTML);
                    }
                });
            });



        });
    </script>
}